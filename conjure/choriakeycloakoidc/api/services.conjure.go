// This file was generated by Conjure and should not be manually edited.

package api

import (
	"context"
	"fmt"
	"net/url"

	"github.com/palantir/conjure-go-runtime/conjure-go-client/httpclient"
)

type AuthorizeClient interface {
	// Takes a Keycloak OIDC JWT, returns a Choria JWT
	Get(ctx context.Context, stateArg string, sessionstateArg string, idtokenArg string) (string, error)
}

type authorizeClient struct {
	client httpclient.Client
}

func NewAuthorizeClient(client httpclient.Client) AuthorizeClient {
	return &authorizeClient{client: client}
}

func (c *authorizeClient) Get(ctx context.Context, stateArg string, sessionstateArg string, idtokenArg string) (string, error) {
	var defaultReturnVal string
	var returnVal *string
	var requestParams []httpclient.RequestParam
	requestParams = append(requestParams, httpclient.WithRPCMethodName("Get"))
	requestParams = append(requestParams, httpclient.WithRequestMethod("GET"))
	requestParams = append(requestParams, httpclient.WithPathf("/authorize"))
	queryParams := make(url.Values)
	queryParams.Set("state", fmt.Sprint(stateArg))
	queryParams.Set("session_state", fmt.Sprint(sessionstateArg))
	queryParams.Set("id_token", fmt.Sprint(idtokenArg))
	requestParams = append(requestParams, httpclient.WithQueryValues(queryParams))
	requestParams = append(requestParams, httpclient.WithJSONResponse(&returnVal))
	resp, err := c.client.Do(ctx, requestParams...)
	if err != nil {
		return defaultReturnVal, err
	}
	_ = resp
	if returnVal == nil {
		return defaultReturnVal, fmt.Errorf("returnVal cannot be nil")
	}
	return *returnVal, nil
}
